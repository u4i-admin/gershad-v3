apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'


Project background_geolocation = project(':transistorsoft-capacitor-background-geolocation')
apply from: "${background_geolocation.projectDir}/app.gradle"

android {
    namespace "com.gershad.gershad"
    compileSdk rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "com.gershad.gershad"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 40010
        versionName "4.0.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        aaptOptions {
             // Files and dirs to omit from the packaged assets dir, modified to accommodate modern web apps.
             // Default: https://android.googlesource.com/platform/frameworks/base/+/282e181b58cf72b6ca770dc7ca5f91f135444502/tools/aapt/AaptAssets.cpp#61
            ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~'
        }
        manifestPlaceholders["CAPACITOR_BACKGROUND_GEOLOCATION_LICENSE_KEY"] = System.getenv("CAPACITOR_BACKGROUND_GEOLOCATION_LICENSE_KEY") ?: ""
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
             // [background-geolocation] Proguard-rules
            proguardFiles "${background_geolocation.projectDir}/proguard-rules.pro"
        }
    }
    flavorDimensions "store"
    productFlavors {
        googlePlay {
            dimension "store"
        }
        independent {
            dimension "store"
        }
    }
    sourceSets {
        googlePlay {
            java.srcDirs = ['../app/src/googlePlay/java']
            manifest.srcFile "../app/src/googlePlay/GooglePlayAndroidManifest.xml"
        }
        independent {
            java.srcDirs = ['../app/src/independent/java']
            manifest.srcFile "../app/src/independent/IndependentAndroidManifest.xml"
        }
    }
}

repositories {
    flatDir{
        dirs '../capacitor-cordova-android-plugins/src/main/libs', 'libs'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "androidx.appcompat:appcompat:$androidxAppCompatVersion"
    implementation "androidx.coordinatorlayout:coordinatorlayout:$androidxCoordinatorLayoutVersion"
    implementation "androidx.core:core-splashscreen:$coreSplashScreenVersion"
    implementation project(':capacitor-android')
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidxJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidxEspressoCoreVersion"
    implementation project(':capacitor-cordova-android-plugins')

    implementation("com.google.firebase:firebase-crashlytics:19.0.2")
    implementation("com.google.firebase:firebase-analytics:20.0.2")

    // Cognito
    implementation "com.amazonaws:aws-android-sdk-core:$awsSdkVersion"
    implementation "com.amazonaws:aws-android-sdk-s3:$awsSdkVersion"
}

apply from: 'capacitor.build.gradle'

try {
    def servicesJSON = file('google-services.json')
    if (servicesJSON.text) {
        apply plugin: 'com.google.gms.google-services'
    }
} catch(Exception e) {
    logger.info("google-services.json not found, google-services plugin not applied")
}
