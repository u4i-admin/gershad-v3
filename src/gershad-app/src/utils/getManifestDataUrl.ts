// This is actually an import from @types/web-app-manifest; there is no
// corresponding web-app-manifest package.
//
// https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/web-app-manifest/index.d.ts
import { WebAppManifest } from "web-app-manifest";

import icon192Png from "src/static/icons/icon192.png";
import icon512Png from "src/static/icons/icon512.png";
// Maskable icons generated by https://maskable.app/editor
import maskableIcon192Png from "src/static/icons/maskableIcon192.png";
import maskableIcon512Png from "src/static/icons/maskableIcon512.png";
import getLocaleMetadata from "src/utils/getLocaleMetadata";
import getLocaleStrings from "src/utils/getLocaleStrings";
import colors from "src/values/colors";
import { LocaleCode } from "src/values/localeValues";

const getManifestDataUrl = ({
  localeCode,
  webUrl,
}: {
  localeCode: LocaleCode;
  webUrl: string;
}) => {
  const strings = getLocaleStrings({ localeCode });

  const localeMetadata = getLocaleMetadata(localeCode);

  const webManifestContent: WebAppManifest = {
    background_color: colors.white,
    dir: localeMetadata.direction,
    display: "standalone",
    icons: [
      {
        purpose: "any",
        sizes: "192x192",
        src: `${webUrl}${icon192Png.src}`,
        type: "image/png",
      },
      {
        purpose: "maskable",
        sizes: "192x192",
        src: `${webUrl}${maskableIcon192Png.src}`,
        type: "image/png",
      },
      {
        purpose: "any",
        sizes: "512x512",
        src: `${webUrl}${icon512Png.src}`,
        type: "image/png",
      },
      {
        purpose: "maskable",
        sizes: "512x512",
        src: `${webUrl}${maskableIcon512Png.src}`,
        type: "image/png",
      },
    ],
    lang: localeMetadata.lang,
    name: strings.shared.siteTitle,
    orientation: "any",
    short_name: strings.shared.siteTitle,
    start_url: `${webUrl}/${localeCode}`,
    theme_color: colors.yellow,
  };

  return `data:application/manifest+json,${encodeURIComponent(
    JSON.stringify(webManifestContent),
  )}`;
};

export default getManifestDataUrl;
